<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\User;//この行を上に追加
use Auth;//この行を上に追加
use Validator;//この行を上に追加

class UserController extends Controller
{
/**
 * Show the form for editing the specified resource.
 *
 * @param  int  $id
 * @return \Illuminate\Http\Response
 */
public function edit($id)
{
    return view('useredit');
}

/**
 * Update the specified resource in storage.
 *
 * @param  \Illuminate\Http\Request  $request
 * @param  \App\User $user
 * @return \Illuminate\Http\Response
 */
public function update(UserRequest $request, User $user)
{
    $user->fill($request->all());

    // パスワードの項目があるとき（つまり、パスワードを変更するとき）
    if (!is_null($request->password)) {
        // パスワードの値をハッシュ化して上書きする。
        $user->password = Hash::make($request->password);
    } else {
        // パスワードの項目に値がないときは、アップデートの対象にしない。
        unset($user->password);
    }
    $user->save();
    return redirect(route('topindex'));
}

}

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\User;//この行を上に追加
use Auth;//この行を上に追加
use Validator;//この行を上に追加


class UserController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //
        return view('user.index', ['user' => Auth::user() ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //新規登録
        $useredit = new useredit(); // ログインしている人のid番号に該当するユーザー情報をUserテーブルからとってきて$user変数に格納
        

        //追加記述 12/19
        $useredit->name = $request->name; 
        $useredit->name_furigana = $request->name_furigana; 
        $useredit->phone_number = $request->phone_number; 
        $useredit->birthday = $request->birthday; 
        $useredit->sex = $request->sex; 
        $useredit->postal_code = $request->postal_code; 
        $useredit->pref_id = $request->pref_id; 
        $useredit->city = $request->city; 
        $useredit->building = $request->building; 
        $useredit->job = $request->job; 
        $useredit->company = $request->company;
        $useredit->user_id = auth()->id();
        
        $useredit->save();//実行ボタンを押す操作。それにより本当にDBへのデータ保存・更新などが実行される。保存のときはsave、更新のときはupdate()などに

        return redirect('/useredit');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //12/19追加
        $val = useredit::with('user')->where('id', $id)->first();
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //ここに加える
        return view('user.edit', ['user' => Auth::user() ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request) {

        $user_form = $request->all();
        $user = Auth::user();
        //不要な「_token」の削除
        unset($user_form['_token']);
        //保存
        $user->fill($user_form)->save();
        //リダイレクト
        return redirect('/topindex');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}

